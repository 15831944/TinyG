#!wing
#!version=4.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('crc.py')]
proj.file-type = 'normal'
proj.main-file = loc('packet.py')
[user attributes]
debug.breakpoints = {loc('packet.py'): {51: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('packet.py'): {}}
debug.show-args-dialog = {loc('commands.py'): False,
                          loc('crc.py'): False,
                          loc('packet.py'): False}
debug.var-col-widths = [0.39918946301925023,
                        0.60081053698074971]
edit.file-encoding = {loc('commands.xml'): 'utf-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'WqKNaGvcbc0t9sdzmf3QczDAmO'\
        'BTelQY',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   1],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.34780334728033468,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [],
                                 'selected-nodes': [(4,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          2],
        'notebook_display': 'normal',
        'notebook_percent': 0.40148305084745761,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 6,
                       'sel-line-start': 27,
                       'selection_end': 27,
                       'selection_start': 27}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 78,
                       'folded-linenos': [],
                       'history': {None: ['hex(IN)\n',
        'import json\n',
        'pay\n'],
                                   u'file:/Users/ril3y/Development/FastLoader/Malware.py': [''\
        's.headers.content_length\n',
        's.headers.__dict__()\n',
        's.headers.__dict__\n',
        'for key,val in self.__dict__:\n',
        '  print key, val\n',
        'x\n',
        'print x\n',
        'x.items()\n',
        'for y in keys.items()\n',
        'for y in keys.items()"\n',
        'for y in keys.items():\n',
        'for y in x.keys.items():\n',
        'x.keys()\n',
        'for y in x.items():\n',
        '  print y\n',
        'x = s.headers.__dict__\n',
        'for y,x in x.items():\n',
        '  print y,x\n',
        's.headers.displayHeaders()\n',
        's.displayHeaders("Headers")\n',
        's.displayHeaders()\n',
        "s.displayHeaders('34')\n",
        's.headers.__class__\n',
        's.headers.__class__()\n',
        's.headers.__module__\n',
        's.headers.__repr__\n',
        's.headers.__str__\n',
        's.headers.__str__()\n',
        's.h()\n',
        's.__class__.name\n',
        's.__class__\n',
        "s.__class__('headers')\n",
        's.__getattribute__()\n',
        "s.__getattribute__('headers')\n",
        "s.__getattribute__('headers').connection\n",
        's.headers.clearHeader()\n',
        'self = self.clearHeader()\n',
        'self = MalwareEntry.Headers()\n',
        'self.connection\n',
        's.headers = MalwareEntry.Headers()\n',
        "s.headers.connection = 'sdf'\n",
        'self.__getattribute__("ExternalLinks")\n',
        'self.__getattribute__("ExternalLinks").__dict__\n',
        'self.__getattribute__("ExternalLinks").__dict__.items()\n',
        'self.__getattribute__("Headers").__dict__.items()\n',
        'self.ExternalLinks.data\n',
        'self.external_links.data\n',
        's.external_links.setExternalLink(y)\n',
        's.external_links\n',
        's.external_links.url\n',
        'url\n',
        'self.url = url\n',
        'self.url\n',
        'self.__getattribute__("Headers")\n',
        'self.__getattribute__("Headers").etag\n',
        'self.__getattribute__("Headers").__dict__\n',
        'self.__getattribute__("Headers").__dict__()\n',
        'print self.__getattribute__("Headers").__dict__\n',
        'print self.__getattribute__("Headers").__dict__.item()\n',
        'print self.__getattribute__("Headers").__dict__.items()\n',
        'MalwareEntry\n',
        'MalwareEntry.__str__\n',
        'MalwareEntry.__str__()\n',
        'print MalwareEntry.__str__\n',
        'print MalwareEntry.__str__()\n',
        's\n',
        's.src_ip\n',
        's.headers\n',
        's.headers.\n',
        's.headers.connection\n',
        's.displayObj("header")\n',
        's.displayObj("header3")\n',
        's.displayObj("headers")\n',
        's.displayObj("external_links")\n',
        's.displayObj("MalwareEntry")\n',
        's.country = "China"\n',
        's.country.find("Chi")\n',
        's.country.find("China")\n',
        's.country.find("asdf")\n',
        's.country.replace("China", "France")\n',
        's.country = s.country.replace("China", "France")\n',
        's.country\n',
        '("#&9")\n',
        's.country = s.country.replace("China", "")\n',
        's.country.strip("SDF")\n',
        's.country.strip("SDFRA")\n',
        's.country.strip("SDFra")\n',
        'objectname\n',
        'print self.headers\n',
        'self.__getattribute__()\n',
        'self.__getattribute__(objectname)\n',
        'tt = self.__getattribute__(objectname)\n',
        'tt.__dict__()\n',
        'tt.__dict__\n',
        'tt.__dict__.items()\n',
        "self.__getattribute__('asdf')\n",
        'self\n',
        'self.country\n',
        'self.country = 23423\n',
        'self.__dict__.keys()\n'],
                                   u'file:/Users/ril3y/Development/FastLoader/Sources.py': [''\
        'x = Source()\n',
        'x.Polled()\n',
        'y = Source.Polled()\n',
        'x\n',
        'x.Polled.frequency\n',
        'x.Polled\n',
        'x  = Source()\n',
        'CleanMX = Source.Polled()\n',
        'cleanmx = Source.Polled()\n',
        'cleanmx.active\n',
        'cleanmx.frequency = 1\n',
        'cleanmx\n',
        'mx.name = "CleanMX"\n',
        'mx\n',
        'mx = Source.Polled()\n',
        'for y in mx:\n',
        '  print yy\n',
        'z = Source()\n',
        'z = Source("asdf")\n',
        'for y in z:\n',
        'c = Source()\n',
        'c\n',
        'for y in c:\n',
        '  print y\n',
        'for y in c.\n',
        'for y in c.numbs : print y\n',
        '@asdf\n',
        'c = Source("AMA")\n',
        'c.f()\n',
        'c.f(23423)\n',
        'SOURCE\n',
        'Source.f(c)\n',
        'y = range(1,900,.2)\n',
        'y = range(1,900,1)\n',
        'y\n',
        'z = [y:2]\n',
        'z = [y[0]:2]\n',
        'z = [y[0]]\n',
        'str(z):1\n',
        'str(z):[1]\n',
        'z\n',
        'z = "adsf"\n',
        'z:1\n',
        'z:[1]\n',
        'z:1,1\n'],
                                   u'file:/Users/ril3y/Development/PyExtruder/commands.py': [''\
        'x = Command()\n',
        'x.command\n',
        'x = Command("C_INIT")\n'],
                                   u'file:/Users/ril3y/Development/PyExtruder/crc.py': [''\
        'fanOn\n',
        'len(fanOn\n',
        ')\n',
        'len(fanOn)-1\n',
        'y = bytearray()\n',
        'y[0] = 3\n',
        'y.append(2)\n',
        'y.append(3)\n',
        'y.append(4)\n',
        'p.command.command\n',
        'p = Packet()\n',
        'p.command = Command(EQ_TOGGLE_FAN)\n',
        'p = Packet(EQ_hey)\n',
        'hey\n',
        'x = bytearray()\n',
        'x.append(4294967295)\n',
        'from ctypes import c_unit32\n',
        'from ctypes import c_uint32\n',
        'y = c_uint32(90000)\n',
        'y\n',
        'x.append(y)\n',
        'x.append(y.value)\n',
        'hex(4294967295)\n',
        'hex(4294967294)\n',
        'p\n',
        'Packet\n',
        'Packet.createPayload\n',
        'p.command\n',
        'p.createPayload()\n',
        'p.command.p_length\n',
        'p = Packet(EQ_TOGGLE_FAN)\n'],
                                   u'file:/Users/ril3y/Development/PyExtruder/packet.py': [''\
        'self.command.p_length\n',
        'p.command.args\n',
        'p.command.payload\n',
        'len(p.START_BYTE)\n',
        'import sys\n',
        'p = Packet()\n',
        'p.command\n',
        'p.payload  = bytearray(3)\n',
        'p.payload[0] = 0xff\n',
        'p.payload[1] = 12\n',
        'p.payload[2] = 1\n',
        'p.payload.title\n',
        'p.payload.title()\n',
        'p.payload[0]\n',
        'p.payload[1]\n',
        'p.payload[2]\n',
        'p.START_BYTE\n',
        'p.createPayload()\n',
        'print getCRC(p.payload)\n',
        'print hex(getCRC(p.payload))\n',
        'p = Packet(EQ_TOGGLE_FAN)\n',
        'self.payload\n',
        'p.sendPacket\n',
        'len(self.payload)\n',
        'len(p.payload)\n',
        '  print b\n',
        '  print hex(b)\n',
        'a = ""\n',
        '  a.join(chr[b])\n',
        '  a.join(chr(b))\n',
        '  a = a.join(chr(b))\n',
        'for b in p.payload:\n',
        '  a = a+a.join(chr(b))\n',
        'p.payload.append(0xff)\n',
        'p\n',
        'p.payload\n',
        'p.sendPacket()\n',
        '  s.write(a)\n',
        '  self.s.write(a)\n',
        'for a in psend:\n',
        '  print a\n',
        'chr(a)\n',
        'psend\n',
        'chr(psend[0])\n',
        'self.s.timeout = 1\n',
        'x\n',
        'self.s.readall()\n',
        'self.s.write(pay)\n',
        'pay\n',
        'self.s.write(0xf2)\n',
        'self.s.write(2)\n',
        'self.s.write("a")\n',
        'self.s.write("A")\n',
        'A\n',
        'a\n',
        'hex(a)\n'],
                                   u'file:/Users/ril3y/crc.py': ['print("SDF'\
        ' %s" % IN)\n',
        'IN.decode\n',
        'IN.decode()\n',
        'IN.title\n',
        'IN.title()\n',
        'getCRC(IN)\n',
        'hex(crc)\n',
        'hex(IN)\n',
        'IN.count()\n',
        'IN.count\n',
        'IN\n',
        'data\n',
        'for y in range(1,7):\n',
        'for y in range(7):\n',
        '  print y\n',
        'for y in range(8):\n',
        'y = bytearray(4)\n',
        'y[0] = 0xff\n',
        'y[1]=0x04\n',
        'y[1]  = 0x76\n',
        'y[2] = 0x00\n',
        'y[3] = 0xff\n',
        'y\n',
        'getCRC(y)\n'],
                                   u'file:/Users/ril3y/wiregames.py': ['x\n',
        'uint = c.c_unit\n',
        'uint = c.c_uint\n',
        'u=343\n',
        'type(u)\n',
        'uint.\n',
        'u = c.c_uint\n',
        'u = c.c_uint()\n',
        'u.value = 2343\n',
        'u\n',
        'byte = c.c_byte\n',
        'byte\n',
        'len(byte.value)\n',
        'byte_list[0].value\n',
        'byte[2]\n',
        'byte_list[2]\n',
        'byte_list[1]\n',
        'byte.value\n',
        'byte_list\n']},
                       'sel-line': 94,
                       'sel-line-start': 1610,
                       'selection_end': 1614,
                       'selection_start': 1614}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.80000000000000004,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 6,
                       'folded-linenos': [],
                       'history': {None: ['x = byte\n',
        'x=bytes\n',
        'from ctypes import c_byte\n',
        'x[0]\n',
        'x = c_byte("0xff")\n',
        'x = c_byte(0xff)\n',
        'x = c_byte(chr(0xff))\n',
        'x = c_byte(255)\n',
        'x = c_byte(254)\n',
        'x = c_byte\n',
        'x = c_byte()\n',
        'x.\n',
        'x.value = 0xff\n',
        'x.value = 23\n',
        'x.value\n',
        'x._b_needsfree_(234)\n',
        'x._b_needsfree_("234")\n',
        'x._b_needsfree_\n',
        'x._b_base_\n',
        'x\n',
        'y = bytearray()\n',
        'y = bytearray(245)\n',
        'y = bytearray(8)\n',
        'type(y)\n',
        'y[0]\n',
        'y[0] = 0xd5\n',
        'y\n',
        'newbyte = bytearray(3)\n',
        'newbyte\n',
        'input = 23\n',
        'input\n',
        'input[0]\n',
        'x = bytearray(0x02, 0x01)\n',
        'x = bytearray("0x02", "0x01")\n',
        'x = bytearray(("0x02", "0x01"))\n',
        'import json\n',
        'x = {"sdf":3}\n',
        "x('sdf')\n",
        "x['sdf']\n"]},
                       'sel-line': 23,
                       'sel-line-start': 795,
                       'selection_end': 812,
                       'selection_start': 812}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'byte_list'),
                                       ('eval',
        'crc'),
                                       ('eval',
        'pay')],
                       'tree-state': {'column-widths': [0.39918946301925023,
        0.60081053698074971],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('packet.py'),
        {'attrib-starts': [('Packet',
                            15),
                           ('Packet.sendPacket',
                            40)],
         'first-line': 42,
         'folded-linenos': [],
         'sel-line': 49,
         'sel-line-start': 1266,
         'selection_end': 1290,
         'selection_start': 1290},
        1307487023.095943),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487032.6601889),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487036.651844),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487046.7401159),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1242,
          'selection_end': 1242,
          'selection_start': 1242},
         1307487048.2350991),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1266,
          'selection_end': 1266,
          'selection_start': 1266},
         1307487050.7332439),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487051.230567),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1242,
          'selection_end': 1242,
          'selection_start': 1242},
         1307487052.230803),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1266,
          'selection_end': 1266,
          'selection_start': 1266},
         1307487053.231472),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487053.726989),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1242,
          'selection_end': 1242,
          'selection_start': 1242},
         1307487054.2306089),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1266,
          'selection_end': 1266,
          'selection_start': 1266},
         1307487055.2262371),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487055.7249141),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1242,
          'selection_end': 1242,
          'selection_start': 1242},
         1307487056.2292359),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1266,
          'selection_end': 1266,
          'selection_start': 1266},
         1307487071.220798),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487071.7189),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1242,
          'selection_end': 1242,
          'selection_start': 1242},
         1307487072.718509),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1266,
          'selection_end': 1266,
          'selection_start': 1266},
         1307487074.716125),
        (loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1291,
          'selection_end': 1291,
          'selection_start': 1291},
         1307487075.216512),
        [loc('packet.py'),
         {'attrib-starts': [('Packet',
                             15),
                            ('Packet.sendPacket',
                             40)],
          'first-line': 42,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1242,
          'selection_end': 1242,
          'selection_start': 1242},
         1307487076.2157049]],
        19),
        'current-loc': loc('packet.py'),
        'editor-states': {loc('../../../../Library/Python/2.6/site-packages/pyserial-2.5-py2.6.egg/serial/serialposix.py'): {''\
        'attrib-starts': [('PosixSerial',
                           259),
                          ('PosixSerial.write',
                           459)],
        'first-line': 438,
        'folded-linenos': [],
        'sel-line': 462,
        'sel-line-start': 16932,
        'selection_end': 16932,
        'selection_start': 16932},
                          loc('commands.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 2752,
        'selection_start': 0},
                          loc('commands.xml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 270,
        'selection_end': 298,
        'selection_start': 298},
                          loc('crc.py'): {'attrib-starts': [('getCRC',
        24)],
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 795,
        'selection_end': 809,
        'selection_start': 809},
                          loc('packet.py'): {'attrib-starts': [('Packet',
        15),
        ('Packet.sendPacket',
         40)],
        'first-line': 42,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 1242,
        'selection_end': 1242,
        'selection_start': 1242}},
        'has-focus': False},
                               'open_files': [u'commands.xml',
        u'commands.py',
        u'crc.py',
        u'packet.py']},
        'split_percents': {0: 0.20255183413078151},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (409,
                         0,
                         1920,
                         1152)}]}
guimgr.recent-documents = [loc('packet.py'),
                           loc('../../../../Library/Python/2.6/site-packages/pyserial-2.5-py2.6.egg/serial/serialposix.py'),
                           loc('crc.py'),
                           loc('commands.py'),
                           loc('commands.xml')]
guimgr.visual-state = {loc('unknown:untitled-2.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0}}
proj.env-vars = {loc('commands.py'): ('project',
                                      ['']),
                 loc('crc.py'): ('project',
                                 ['']),
                 loc('packet.py'): ('project',
                                    [''])}
